// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wire

import (
	"github.com/vnnyx/golang-dot-api/controller/auth"
	transaction2 "github.com/vnnyx/golang-dot-api/controller/transaction"
	"github.com/vnnyx/golang-dot-api/controller/user"
	"github.com/vnnyx/golang-dot-api/infrastructure"
	auth2 "github.com/vnnyx/golang-dot-api/repository/auth"
	"github.com/vnnyx/golang-dot-api/repository/transaction"
	user2 "github.com/vnnyx/golang-dot-api/repository/user"
	auth3 "github.com/vnnyx/golang-dot-api/service/auth"
	transaction3 "github.com/vnnyx/golang-dot-api/service/transaction"
	user3 "github.com/vnnyx/golang-dot-api/service/user"
)

// Injectors from wire.go:

func InitializeUserController() user.UserController {
	config := infrastructure.NewConfig()
	db := infrastructure.NewMySQLDatabase(config)
	userRepository := user2.NewUserRepository(db)
	transactionRepository := transaction.NewTransactionRepository(db)
	userService := user3.NewUserService(userRepository, transactionRepository, db)
	userController := user.NewUserController(userService)
	return userController
}

func InitializeTransactionController() transaction2.TransactionController {
	config := infrastructure.NewConfig()
	db := infrastructure.NewMySQLDatabase(config)
	transactionRepository := transaction.NewTransactionRepository(db)
	userRepository := user2.NewUserRepository(db)
	transactionService := transaction3.NewTransactionService(transactionRepository, userRepository)
	transactionController := transaction2.NewTransactionController(transactionService)
	return transactionController
}

func InitializeAuthController() auth.AuthController {
	config := infrastructure.NewConfig()
	db := infrastructure.NewMySQLDatabase(config)
	userRepository := user2.NewUserRepository(db)
	client := infrastructure.NewRedisClient()
	authRepository := auth2.NewAuthRepository(client)
	authService := auth3.NewAuthService(config, db, userRepository, authRepository)
	authController := auth.NewAuthController(authService)
	return authController
}
